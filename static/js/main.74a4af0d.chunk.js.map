{"version":3,"sources":["components/NavButton.js","views/CharacterCreator.js","static_data/homeworlds.js","views/Homeworlds.js","views/Characteristics.js","static_data/backgrounds.js","static_data/talents.js","static_data/equipment.js","components/AlternativesBox.js","views/Backgrounds.js","static_data/roles.js","views/Roles.js","App.js","serviceWorker.js","index.js"],"names":["NavButton","props","react_default","a","createElement","Button","Object","assign","component","Link","children","CharacterCreator","Box","components_NavButton","to","React","Component","homeworlds","name","modifiers","characteristic","sign","fate","threshold","emperors_blessing","bonus","text","aptitude","wounds","Homeworlds","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleTableClick","bind","assertThisInitialized","world","setHomeworld","_this2","Table","TableHead","TableRow","TableCell","TableBody","map","isRowSelected","undefined","homeworld","hover","onClick","key","selected","modifier","Tooltip","title","disabled","Characteristics","state","woundsRolled","fateRolled","rollForWounds","rollForFate","setWounds","Math","floor","random","setState","objectSpread","setFate","Grid","container","keys","characteristics","item","xs","TextField","id","type","value","onChange","event","handleCharacteristicChange","backgrounds","skills","options","specialization","talents","equipment","aptitudes","count","prerequisites","tier","static_data_equipment","AlternativesBox","orBox","toConsumableArray","child","index","length","reduce","b","concat","Backgrounds","areBackgroundInputsDisabled","isSkillSelected","areTalentsOrWeaponsSelected","isEverythingSelected","background","setBackground","skill","talentOrWeapon","backgroundChoices","allSkillsSelected","every","allTalentsSelected","allEquipmentSelected","isAptitudeSelected","components_AlternativesBox","skillOption","talent","talentOption","talentHeader","find","backgroundItem","itemOption","skillChoice","RadioGroup","newSkillChoice","target","oldSkillIndex","indexOf","newSkillsChoices","newBackgroundChoices","setBackgroundChoices","FormControlLabel","control","Radio","label","placeholder","talentChoice","newTalentChoice","oldTalentIndex","newTalentsChoices","talentValue","equipmentChoice","newEquipmentChoice","oldEquipmentIndex","newEquipmentChoices","roles","Roles","role","setRole","Array","isArray","singleAptitude","App","weapon_skill","ballistic_skill","strength","toughness","agility","intelligence","perception","willpower","fellowship","influence","setCharacteristics","defineProperty","filter","react_router_dom","react_router","path","exact","render","views_Homeworlds","views_Characteristics","views_Backgrounds","views_Roles","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.74a4af0d.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction NavButton(props) {\r\n  return(\r\n    <Button component={Link} {...props} >\r\n      {props.children}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default NavButton;","import React from 'react';\r\nimport NavButton from '../components/NavButton';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nclass CharacterCreator extends React.Component {\r\n  render() {\r\n    return (\r\n      <Box>\r\n        <p>\r\n          Welcome to Dark Heresy 2nd Edtion Character Creator.\r\n        </p>\r\n        <NavButton to={\"/homeworlds\"}>\r\n          Start creating!\r\n        </NavButton>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CharacterCreator;","export default [\r\n    {\r\n      \"name\": \"Feral World\",\r\n      \"modifiers\": [\r\n        {\r\n          \"characteristic\": \"strength\",\r\n          \"sign\": \"+\"\r\n        },\r\n        {\r\n          \"characteristic\": \"toughness\",\r\n          \"sign\": \"+\"\r\n        },\r\n        {\r\n          \"characteristic\": \"influence\",\r\n          \"sign\": \"-\"\r\n        }\r\n      ],\r\n      \"fate\": {\r\n        \"threshold\": 2,\r\n        \"emperors_blessing\": 3\r\n      },\r\n      \"bonus\": {\r\n        \"name\": \"The Old Ways\",\r\n        \"text\": \"In the hands of a feral world character, any Low-Tech weapon loses the Primitive quality (if it had it) and gains the Proven (3) quality.\"\r\n      },\r\n      \"aptitude\": \"toughness\",\r\n      \"wounds\": 9\r\n    },\r\n    {\r\n      \"name\": \"Forge World\",\r\n      \"modifiers\": [\r\n        {\r\n          \"characteristic\": \"intelligence\",\r\n          \"sign\": \"+\"\r\n        },\r\n        {\r\n          \"characteristic\": \"toughness\",\r\n          \"sign\": \"+\"\r\n        },\r\n        {\r\n          \"characteristic\": \"fellowship\",\r\n          \"sign\": \"-\"\r\n        }\r\n      ],\r\n      \"fate\": {\r\n        \"threshold\": 3,\r\n        \"emperors_blessing\": 8\r\n      },\r\n      \"bonus\": {\r\n        \"name\": \"Omnissiah’s Chosen\",\r\n        \"text\": \"A forge world character starts with either the Technical Knock or Weapon-Tech talent.\"\r\n      },\r\n      \"aptitude\": \"intelligence\",\r\n      \"wounds\": 8\r\n    }\r\n  ];","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport NavButton from '../components/NavButton';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport homeworlds from '../static_data/homeworlds';\r\n\r\nclass  Homeworlds extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleTableClick = this.handleTableClick.bind(this);\r\n  }\r\n\r\n  handleTableClick(world) {\r\n    this.props.setHomeworld(world);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Box>\r\n        <header>\r\n        Select your homeworld\r\n        </header>\r\n        \r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>World</TableCell>\r\n              <TableCell>Characterstic Modifiers</TableCell>\r\n              <TableCell>Fate Threshold</TableCell>\r\n              <TableCell>Bonus</TableCell>\r\n              <TableCell>Aptitude</TableCell>\r\n              <TableCell>Wounds</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {\r\n              homeworlds.map(world => {\r\n                const isRowSelected = (this.props.homeworld !== undefined) && (world.name === this.props.homeworld.name);\r\n                return(\r\n                  <TableRow\r\n                    hover\r\n                    onClick={() => this.handleTableClick(world)}\r\n                    key={world.name}\r\n                    selected={isRowSelected}\r\n                  >\r\n                    <TableCell>\r\n                      {world.name}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {\r\n                        world.modifiers.map(modifier => (\r\n                          <Box>\r\n                            {modifier.sign + modifier.characteristic}\r\n                          </Box>\r\n                        ))\r\n                      }\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {world.fate.threshold} (Emperor's Blessing: {world.fate.emperors_blessing}+)\r\n                    </TableCell>\r\n                    <Tooltip title={world.bonus.text}>\r\n                      <TableCell>\r\n                        {world.bonus.name}\r\n                      </TableCell>\r\n                    </Tooltip>\r\n                    <TableCell>\r\n                      {world.aptitude}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {world.wounds}+1d5\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              })\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n        <NavButton to={\"/\"}>\r\n          Back\r\n        </NavButton>\r\n        <NavButton disabled={this.props.homeworld === undefined} to={\"/characteristics\"} >\r\n          Characteristics\r\n        </NavButton>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Homeworlds;","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NavButton from '../components/NavButton';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nclass Characteristics extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      woundsRolled: false,\r\n      fateRolled: false\r\n    };\r\n\r\n    this.rollForWounds = this.rollForWounds.bind(this);\r\n    this.rollForFate = this.rollForFate.bind(this);\r\n  }\r\n  \r\n  rollForWounds() {\r\n    this.props.setWounds(Math.floor(Math.random() * 5) + 1 + this.props.homeworld.wounds);\r\n    this.setState({\r\n      ...this.state,\r\n      woundsRolled: true\r\n    });\r\n  }\r\n\r\n  rollForFate() {\r\n    const roll = Math.floor(Math.random() * 10) + 1;\r\n\r\n    if (roll >= this.props.homeworld.fate.emperors_blessing) {\r\n      this.props.setFate(this.props.homeworld.fate.threshold + 1);\r\n    } else {\r\n      this.props.setFate(this.props.homeworld.fate.threshold);\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      fateRolled: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Box>\r\n        <Grid container>\r\n          {\r\n            Object.keys(this.props.characteristics).map(characteristic => (\r\n              <Grid item xs={6}>\r\n                {characteristic}\r\n                <TextField\r\n                  id={characteristic}\r\n                  type=\"number\"\r\n                  value={this.props.characteristics[characteristic]}\r\n                  onChange={event => this.props.handleCharacteristicChange(event, characteristic)}\r\n                />\r\n              </Grid>\r\n            ))\r\n          }\r\n        </Grid>\r\n  \r\n        <Box>\r\n          Wounds\r\n          <TextField id=\"wounds\" disabled type=\"number\" value={this.props.wounds} />\r\n          <Button disabled={this.state.woundsRolled} onClick={() => { this.rollForWounds(); }}>\r\n            Roll for wounds!\r\n          </Button>\r\n        </Box>\r\n  \r\n        <Box>\r\n          Fate threshold\r\n          <TextField id=\"fate\" disabled type=\"number\" value={this.props.fate} />\r\n          <Button disabled={this.state.fateRolled} onClick={() => { this.rollForFate(); }}>\r\n            Roll for Emperor's Blessing!\r\n          </Button>\r\n        </Box>\r\n  \r\n        <Box>\r\n          Movement\r\n          <Box>\r\n            Half\r\n            <TextField id=\"movement-half\" disabled type=\"number\" value={Math.floor(this.props.characteristics[\"agility\"] / 10)} />\r\n          </Box>\r\n          <Box>\r\n            Full\r\n            <TextField id=\"movement-full\" disabled type=\"number\" value={Math.floor(this.props.characteristics[\"agility\"] / 10) * 2} />\r\n          </Box>\r\n          <Box>\r\n            Charge\r\n            <TextField id=\"movement-charge\" disabled type=\"number\" value={Math.floor(this.props.characteristics[\"agility\"] / 10) * 3} />\r\n          </Box>\r\n          <Box>\r\n            Run\r\n            <TextField id=\"movement-run\" disabled type=\"number\" value={Math.floor(this.props.characteristics[\"agility\"] / 10) * 6} />\r\n          </Box>\r\n        </Box>\r\n  \r\n        <Box>\r\n          Fatigue\r\n          <TextField id=\"fatigue\" disabled type=\"number\" value={Math.floor(this.props.characteristics[\"toughness\"] / 10) + Math.floor(this.props.characteristics[\"willpower\"] / 10)} />\r\n        </Box>\r\n  \r\n        <Box>\r\n          Max carry\r\n          <TextField id=\"fatigue\" disabled type=\"number\" value={Math.floor(this.props.characteristics[\"toughness\"] / 10) + Math.floor(this.props.characteristics[\"strength\"] / 10)} />\r\n        </Box>\r\n  \r\n        <NavButton to={\"/homeworlds\"}>\r\n          Back\r\n        </NavButton>\r\n        <NavButton to={\"/backgrounds\"}>\r\n          Select your background\r\n        </NavButton>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Characteristics;","export default [\r\n  {\r\n    \"name\": \"adeptus_administratum\",\r\n    \"skills\": [\r\n      {\r\n        \"type\": \"choice\",\r\n        \"options\": [\r\n          {\r\n            \"type\": \"simple\",\r\n            \"name\": \"commerce\"\r\n          },\r\n          {\r\n            \"type\": \"simple\",\r\n            \"name\": \"medicae\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"type\": \"specialized\",\r\n        \"name\": \"common_lore\",\r\n        \"specialization\": \"adeptus_administratum\"\r\n      },\r\n      {\r\n        \"type\": \"specialized\",\r\n        \"name\": \"linguistics\",\r\n        \"specialization\": \"high_gothic\"\r\n      },\r\n      {\r\n        \"type\": \"simple\",\r\n        \"name\": \"logic\"\r\n      },\r\n      {\r\n        \"type\": \"specialized\",\r\n        \"name\": \"scholastic_lore\",\r\n        \"specialization\": null\r\n      }\r\n    ],\r\n    \"talents\": [\r\n      {\r\n        \"type\": \"choice\",\r\n        \"options\": [\r\n          {\r\n            \"type\": \"specialized\",\r\n            \"name\": \"weapon_training\",\r\n            \"specialization\": \"las\"\r\n          },\r\n          {\r\n            \"type\": \"specialized\",\r\n            \"name\": \"weapon_training\",\r\n            \"specialization\": \"solid_projectile\"\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"equipment\": [\r\n      {\r\n        \"type\": \"choice\",\r\n        \"options\": [\r\n          {\r\n            \"type\": \"weapon\",\r\n            \"name\": \"laspistol\"\r\n          },\r\n          {\r\n            \"type\": \"weapon\",\r\n            \"name\": \"stub_automatic\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"type\": \"armor\",\r\n        \"name\": \"imperial_robes\"\r\n      },\r\n      {\r\n        \"type\": \"miscellanous\",\r\n        \"name\": \"autoquill\"\r\n      },\r\n      {\r\n        \"type\": \"gear\",\r\n        \"name\": \"chrono\"\r\n      },\r\n      {\r\n        \"type\": \"tool\",\r\n        \"name\": \"dataslate\"\r\n      },\r\n      {\r\n        \"type\": \"tool\",\r\n        \"name\": \"medi-kit\"\r\n      }\r\n    ],\r\n    \"bonus\": {\r\n      \"name\": \"Master of Paperwork\",\r\n      \"text\": \"An Adeptus Administratum character counts the Availability of all items as one level more available (Very Rare items count as Rare, Average items count as Common, etc.).\"\r\n    },\r\n    \"aptitudes\": [\r\n      \"knowledge\",\r\n      \"social\"\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"adeptus_arbites\",\r\n    \"skills\": [\r\n      {\r\n        \"type\": \"simple\",\r\n        \"name\": \"awareness\"\r\n      },\r\n      {\r\n        \"type\": \"specialized\",\r\n        \"name\": \"common_lore\",\r\n        \"specialization\": \"adeptus_arbites\"\r\n      },\r\n      {\r\n        \"type\": \"specialized\",\r\n        \"name\": \"common_lore\",\r\n        \"specialization\": \"underworld\"\r\n      },\r\n      {\r\n        \"type\": \"choice\",\r\n        \"options\": [\r\n          {\r\n            \"type\": \"simple\",\r\n            \"name\": \"inquiry\"\r\n          },\r\n          {\r\n            \"type\": \"simple\",\r\n            \"name\": \"interrogation\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"type\": \"simple\",\r\n        \"name\": \"intimidate\"\r\n      },\r\n      {\r\n        \"type\": \"simple\",\r\n        \"name\": \"scrutiny\"\r\n      }\r\n    ],\r\n    \"talents\": [\r\n      {\r\n        \"type\": \"choice\",\r\n        \"options\": [\r\n          {\r\n            \"type\": \"specialized\",\r\n            \"name\": \"weapon_training\",\r\n            \"specialization\": \"shock\"\r\n          },\r\n          {\r\n            \"type\": \"specialized\",\r\n            \"name\": \"weapon_training\",\r\n            \"specialization\": \"solid_projectile\"\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"equipment\": [\r\n      {\r\n        \"type\": \"choice\",\r\n        \"options\": [\r\n          {\r\n            \"type\": \"weapon\",\r\n            \"name\": \"shotgun\"\r\n          },\r\n          {\r\n            \"type\": \"weapon\",\r\n            \"name\": \"shock_maul\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"type\": \"choice\",\r\n        \"options\": [\r\n          {\r\n            \"type\": \"armor\",\r\n            \"name\": \"enforcer_light_carapace_armour\"\r\n          },\r\n          {\r\n            \"type\": \"armor\",\r\n            \"name\": \"carapace_chestplate\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"type\": \"consumable\",\r\n        \"name\": \"stimm\",\r\n        \"count\": 3\r\n      },\r\n      {\r\n        \"type\": \"consumable\",\r\n        \"name\": \"lho-sticks\",\r\n        \"count\": 12\r\n      },\r\n      {\r\n        \"type\": \"tool\",\r\n        \"name\": \"manacles\"\r\n      }\r\n    ],\r\n    \"bonus\": {\r\n      \"name\": \"The Face of the Law\",\r\n      \"text\": \"An Arbitrator can re-roll any Intimidation and Interrogation test, and can substitute his Willpower bonus for his degrees of success on these tests.\"\r\n    },\r\n    \"aptitudes\": [\r\n      \"offence\",\r\n      \"defence\"\r\n    ]\r\n  }\r\n];","export default [\r\n  {\r\n    \"type\": \"specialized\",\r\n    \"name\": \"weapon_training\",\r\n    \"aptitudes\": [\r\n      \"general\",\r\n      \"finesse\"\r\n    ],\r\n    \"prerequisites\": null,\r\n    \"tier\": 1,\r\n    \"text\": \"The Acolyte can use all weapons with Class: Pistol, Basic, Melee, Throwing, and Vehicle within the group he has selected with this talent. When a character attempts to use a weapon he does not have the correct Weapon Training talent for, he suffers a –20 penalty to any relevant Weapon Skill or Ballistic Skill test. The character can only use weapons with Class: Heavy without suffering the –20 penalty if he has both Weapon Training in the appropriate group and Weapon Training (Heavy). This talent can be taken more than once, each time with a different Specialisation. Note that a character without the Weapon Training (Low-Tech) talent operating a weapon that functions as a Low-Tech weapon in certain circumstances does not suffer this penalty, so long as he has the applicable Weapon Training talent for the weapon (Power for a power sword, for example).\"\r\n  }\r\n];","export default [\r\n  {\r\n    \"type\": \"weapon\",\r\n    \"name\": \"laspistol\",\r\n    \"text\": \"\"\r\n  },\r\n  {\r\n    \"type\": \"weapon\",\r\n    \"name\": \"stub_automatic\",\r\n    \"text\": \"\"\r\n  },\r\n  {\r\n    \"type\": \"armor\",\r\n    \"name\": \"imperial_robes\",\r\n    \"text\": \"\"\r\n  },\r\n  {\r\n    \"type\": \"miscellanous\",\r\n    \"name\": \"autoquill\",\r\n    \"text\": \"\"\r\n  },\r\n  {\r\n    \"type\": \"gear\",\r\n    \"name\": \"chrono\",\r\n    \"text\": \"\"\r\n  },\r\n  {\r\n    \"type\": \"tool\",\r\n    \"name\": \"dataslate\",\r\n    \"text\": \"\"\r\n  },\r\n  {\r\n    \"type\": \"tool\",\r\n    \"name\": \"medi-kit\",\r\n    \"text\": \"\"\r\n  },\r\n  {\r\n    \"type\": \"weapon\",\r\n    \"name\": \"shotgun\",\r\n    \"text\": \"\"\r\n  },\r\n  {\r\n    \"type\": \"weapon\",\r\n    \"name\": \"shock_maul\",\r\n    \"text\": \"\"\r\n  },\r\n  {\r\n    \"type\": \"armor\",\r\n    \"name\": \"enforcer_light_carapace_armour\",\r\n    \"text\": \"\"\r\n  },\r\n  {\r\n    \"type\": \"armor\",\r\n    \"name\": \"carapace_chestplate\",\r\n    \"text\": \"\"\r\n  },\r\n  {\r\n    \"type\": \"consumable\",\r\n    \"name\": \"stimm\",\r\n    \"text\": \"\"\r\n  },\r\n  {\r\n    \"type\": \"consumable\",\r\n    \"name\": \"lho-sticks\",\r\n    \"text\": \"\"\r\n  },\r\n  {\r\n    \"type\": \"tool\",\r\n    \"name\": \"manacles\",\r\n    \"text\": \"\"\r\n  }\r\n];","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nclass AlternativesBox extends React.Component {\r\n  render() {\r\n    const orBox = (\r\n      <Box>\r\n        or\r\n      </Box>\r\n    )\r\n    return(\r\n      <Box>\r\n        {\r\n          [...this.props.children].map((child, index) => {\r\n            if (index < this.props.children.length - 1) {\r\n              return([child, orBox])\r\n            } else {\r\n              return([child])\r\n            }\r\n          }).reduce((a, b) => a.concat(b))\r\n        }\r\n      </Box>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AlternativesBox;","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport NavButton from '../components/NavButton';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport backgrounds from '../static_data/backgrounds';\r\nimport talents from '../static_data/talents';\r\nimport equipment from '../static_data/equipment';\r\nimport AlternativesBox from '../components/AlternativesBox';\r\n\r\nclass Backgrounds extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleTableClick = this.handleTableClick.bind(this);\r\n    this.areBackgroundInputsDisabled = this.areBackgroundInputsDisabled.bind(this);\r\n    this.isSkillSelected = this.isSkillSelected.bind(this);\r\n    this.areTalentsOrWeaponsSelected = this.areTalentsOrWeaponsSelected.bind(this);\r\n    this.isEverythingSelected = this.isEverythingSelected.bind(this);\r\n  }\r\n\r\n  handleTableClick(background) {\r\n    this.props.setBackground(background);\r\n  }\r\n\r\n  areBackgroundInputsDisabled(background) {\r\n    return(this.props.background === undefined || this.props.background.name !== background.name);\r\n  }\r\n\r\n  isSkillSelected(skill) {\r\n    return(skill.type === \"choice\" ? skill.selected !== null : skill.specialization !== null);\r\n  }\r\n\r\n  areTalentsOrWeaponsSelected(talentOrWeapon) {\r\n    return(talentOrWeapon.selected !== null);\r\n  }\r\n\r\n  isEverythingSelected() {\r\n    if (this.props.backgroundChoices === undefined) return(false);\r\n    const allSkillsSelected = this.props.backgroundChoices.skills.every(this.isSkillSelected);\r\n    const allTalentsSelected = this.props.backgroundChoices.talents.every(this.areTalentsOrWeaponsSelected);\r\n    const allEquipmentSelected = this.props.backgroundChoices.equipment.every(this.areTalentsOrWeaponsSelected);\r\n    const isAptitudeSelected = this.props.backgroundChoices.aptitude !== null;\r\n\r\n    return(allSkillsSelected && allTalentsSelected && allEquipmentSelected && isAptitudeSelected)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Box>\r\n        <header>\r\n        Select your background\r\n        </header>\r\n        \r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Background</TableCell>\r\n              <TableCell>Starting Skills</TableCell>\r\n              <TableCell>Starting Talents</TableCell>\r\n              <TableCell>Starting Equipment</TableCell>\r\n              <TableCell>Bonus</TableCell>\r\n              <TableCell>Aptitude</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {\r\n              backgrounds.map(background => {\r\n                const isRowSelected = (this.props.background !== undefined) && (background.name === this.props.background.name);\r\n                return(\r\n                  <TableRow\r\n                    hover\r\n                    onClick={() => this.handleTableClick(background)}\r\n                    key={background.name}\r\n                    selected={isRowSelected}\r\n                  >\r\n                    <TableCell>\r\n                      {background.name}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {\r\n                        background.skills.map(skill => {\r\n                          if (skill.type === \"choice\") {\r\n                            return(\r\n                              <AlternativesBox>\r\n                                {\r\n                                  skill.options.map(skillOption => (\r\n                                    <Box>\r\n                                      {skillOption.name}\r\n                                    </Box>\r\n                                  ))\r\n                                }\r\n                              </AlternativesBox>\r\n                            )\r\n                          } else if (skill.type === \"specialized\") {\r\n                            if (skill.specialization === null) {\r\n                              return(\r\n                                <Box>\r\n                                  {skill.name} (pick one)\r\n                                </Box>\r\n                              )\r\n                            } else {\r\n                              return(\r\n                                <Box>\r\n                                  {skill.name} ({skill.specialization})\r\n                                </Box>\r\n                              )\r\n                            }\r\n                          } else {\r\n                            return(\r\n                              <Box>\r\n                                {skill.name}\r\n                              </Box>\r\n                            )\r\n                          }\r\n                        })\r\n                      }\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {\r\n                        background.talents.map(talent => {\r\n                          if (talent.type === \"choice\") {\r\n                            return(\r\n                              <AlternativesBox>\r\n                                {\r\n                                  talent.options.map(talentOption => {\r\n                                    const talentHeader = talentOption.type === \"specialized\" ? talentOption.name + \" (\" + talentOption.specialization + \")\" : talentOption.name;\r\n                                    return(\r\n                                      <Tooltip title={talents.find(item => item.name === talentOption.name).text}>\r\n                                        <Box>\r\n                                          {talentHeader}\r\n                                        </Box>\r\n                                      </Tooltip>\r\n                                    )\r\n                                  })\r\n                                }\r\n                              </AlternativesBox>\r\n                            )\r\n                          } else if (talent.type === \"specialized\") {\r\n                            return(\r\n                              <Tooltip title={talents.find(item => item.name === talent.name).text}>\r\n                                {talent.name} ({talent.specialization})\r\n                              </Tooltip>\r\n                            )\r\n                          } else {\r\n                            return(\r\n                              <Tooltip title={talents.find(item => item.name === talent.name).text}>\r\n                                {talent.name}\r\n                              </Tooltip>\r\n                            )\r\n                          }\r\n                        })\r\n                      }\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {\r\n                        background.equipment.map(backgroundItem => {\r\n                          if (backgroundItem.type === \"choice\") {\r\n                            return(\r\n                              <AlternativesBox>\r\n                                {\r\n                                  backgroundItem.options.map(itemOption => {\r\n                                    return(\r\n                                      <Tooltip title={equipment.find(item => item.name === itemOption.name).text}>\r\n                                        <Box>\r\n                                          {itemOption.name}\r\n                                        </Box>\r\n                                      </Tooltip>\r\n                                    )\r\n                                  })\r\n                                }\r\n                              </AlternativesBox>\r\n                            )\r\n                          } else if (backgroundItem.type === \"consumable\") {\r\n                            return(\r\n                              <Tooltip title={equipment.find(item => item.name === backgroundItem.name).text}>\r\n                                <Box>\r\n                                  {backgroundItem.name} ({backgroundItem.count})\r\n                                </Box>\r\n                              </Tooltip>\r\n                            )\r\n                          } else {\r\n                            return(\r\n                              <Tooltip title={equipment.find(item => item.name === backgroundItem.name).text}>\r\n                                <Box>\r\n                                  {backgroundItem.name}\r\n                                </Box>\r\n                              </Tooltip>\r\n                            )\r\n                          }\r\n                        })\r\n                      }\r\n                    </TableCell>\r\n                    <Tooltip title={background.bonus.text}>\r\n                      <TableCell>\r\n                        {background.bonus.name}\r\n                      </TableCell>\r\n                    </Tooltip>\r\n                    <TableCell>\r\n                      <AlternativesBox>\r\n                        {\r\n                          background.aptitudes.map(aptitude => (\r\n                            <Box>\r\n                              {aptitude}\r\n                            </Box>\r\n                          ))\r\n                        }\r\n                      </AlternativesBox>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              })\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n        {\r\n          this.props.backgroundChoices !== undefined &&\r\n          <Box>\r\n            <header>\r\n              Make your selections\r\n            </header>\r\n            <Box>\r\n              <header>\r\n                Skills\r\n              </header>\r\n              {\r\n                this.props.backgroundChoices.skills.map(skillChoice => {\r\n                  if (skillChoice.type === \"choice\") {\r\n                    return(\r\n                      <RadioGroup \r\n                        value={skillChoice.selected} \r\n                        onChange={(event) => {\r\n\r\n                          const newSkillChoice = {\r\n                            ...skillChoice,\r\n                            selected: event.target.value\r\n                          };\r\n\r\n                          const oldSkillIndex = this.props.backgroundChoices.skills.indexOf(skillChoice);\r\n\r\n                          const newSkillsChoices = this.props.backgroundChoices.skills;\r\n\r\n                          newSkillsChoices[oldSkillIndex] = newSkillChoice\r\n\r\n                          const newBackgroundChoices = {\r\n                            ...this.props.backgroundChoices,\r\n                            skills: newSkillsChoices\r\n                          };\r\n                        \r\n                          this.props.setBackgroundChoices(newBackgroundChoices);\r\n                        }}\r\n                      > \r\n                        {\r\n                          skillChoice.options.map((skill) => (\r\n                            <FormControlLabel value={skill.name} control={<Radio />} label={skill.name} />\r\n                          ))\r\n                        }\r\n                      </RadioGroup>\r\n                    )\r\n                  } else {\r\n                    return(\r\n                      <Box>\r\n                        {skillChoice.name}\r\n                        <TextField placeholder=\"Pick one\" onChange={(event) => {\r\n                          const newSkillChoice = {\r\n                            ...skillChoice,\r\n                            specialization: event.target.value\r\n                          };\r\n\r\n                          const oldSkillIndex = this.props.backgroundChoices.skills.indexOf(skillChoice);\r\n\r\n                          const newSkillsChoices = this.props.backgroundChoices.skills;\r\n\r\n                          newSkillsChoices[oldSkillIndex] = newSkillChoice\r\n\r\n                          const newBackgroundChoices = {\r\n                            ...this.props.backgroundChoices,\r\n                            skills: newSkillsChoices\r\n                          };\r\n                        \r\n                          this.props.setBackgroundChoices(newBackgroundChoices);\r\n                        }} />\r\n                      </Box>\r\n                    )\r\n                  }\r\n                })\r\n              }\r\n            </Box>\r\n            <Box>\r\n              <header>\r\n                Talents\r\n              </header>\r\n              {\r\n                this.props.backgroundChoices.talents.map(talentChoice => {\r\n                  \r\n                  return(\r\n                    <RadioGroup \r\n                      value={talentChoice.selected} \r\n                      onChange={(event) => {\r\n\r\n                        const newTalentChoice = {\r\n                          ...talentChoice,\r\n                          selected: event.target.value\r\n                        };\r\n\r\n                        const oldTalentIndex = this.props.backgroundChoices.talents.indexOf(talentChoice);\r\n\r\n                        const newTalentsChoices = this.props.backgroundChoices.talents;\r\n\r\n                        newTalentsChoices[oldTalentIndex] = newTalentChoice\r\n\r\n                        const newBackgroundChoices = {\r\n                          ...this.props.backgroundChoices,\r\n                          talents: newTalentsChoices\r\n                        };\r\n                      \r\n                        this.props.setBackgroundChoices(newBackgroundChoices);\r\n                      }}\r\n                    > \r\n                      {\r\n                        talentChoice.options.map((talent) => {\r\n                          const talentHeader = talent.type === \"specialized\" ? talent.name + \" (\" + talent.specialization + \")\" : talent.name;\r\n                          const talentValue = talent.type === \"specialized\" ? talent.name + \"+\" + talent.specialization : talent.name;\r\n                          return(\r\n                            <FormControlLabel value={talentValue} control={<Radio />} label={talentHeader} />\r\n                          )\r\n                        })\r\n                      }\r\n                    </RadioGroup>\r\n                  )\r\n      \r\n                })\r\n              }\r\n            </Box>\r\n            <Box>\r\n              <header>\r\n                Equipment\r\n              </header>\r\n              {\r\n                this.props.backgroundChoices.equipment.map(equipmentChoice => {\r\n                  \r\n                  return(\r\n                    <RadioGroup \r\n                      value={equipmentChoice.selected} \r\n                      onChange={(event) => {\r\n\r\n                        const newEquipmentChoice = {\r\n                          ...equipmentChoice,\r\n                          selected: event.target.value\r\n                        };\r\n\r\n                        const oldEquipmentIndex = this.props.backgroundChoices.equipment.indexOf(equipmentChoice);\r\n\r\n                        const newEquipmentChoices = this.props.backgroundChoices.equipment;\r\n\r\n                        newEquipmentChoices[oldEquipmentIndex] = newEquipmentChoice\r\n\r\n                        const newBackgroundChoices = {\r\n                          ...this.props.backgroundChoices,\r\n                          equipment: newEquipmentChoices\r\n                        };\r\n                      \r\n                        this.props.setBackgroundChoices(newBackgroundChoices);\r\n                      }}\r\n                    > \r\n                      {\r\n                        equipmentChoice.options.map((equipment) => (\r\n                          <FormControlLabel value={equipment.name} control={<Radio />} label={equipment.name} />\r\n                        ))\r\n                      }\r\n                    </RadioGroup>\r\n                  )\r\n      \r\n                })\r\n              }\r\n            </Box>\r\n            <Box>\r\n              <header>\r\n                Aptitude\r\n              </header>\r\n              <RadioGroup \r\n                value={this.props.backgroundChoices.aptitude} \r\n                onChange={(event) => {\r\n                  const newBackgroundChoices = {\r\n                    ...this.props.backgroundChoices,\r\n                    aptitude: event.target.value\r\n                  };\r\n                \r\n                  this.props.setBackgroundChoices(newBackgroundChoices);\r\n                }}\r\n              > \r\n                {\r\n                  this.props.background.aptitudes.map(aptitude => (\r\n                    <FormControlLabel value={aptitude} control={<Radio />} label={aptitude} />\r\n                  ))\r\n                }\r\n              </RadioGroup>\r\n            </Box>\r\n          </Box>\r\n        }\r\n        <NavButton to={\"/characteristics\"}>\r\n          Back\r\n        </NavButton>\r\n        <NavButton to={'/roles'} disabled={!this.isEverythingSelected()} >\r\n          Choose your role\r\n        </NavButton>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backgrounds;","export default [\r\n  {\r\n    \"name\": \"Assassin\",\r\n    \"aptitudes\": [\r\n      \"agility\",\r\n      [\r\n        \"ballistic_skill\",\r\n        \"weapon_skill\"\r\n      ],\r\n      \"fieldcraft\",\r\n      \"finesse\",\r\n      \"perception\"\r\n    ],\r\n    \"talents\": [\r\n      {\r\n        \"type\": \"simple\",\r\n        \"name\": \"jaded\"\r\n      },\r\n      {\r\n        \"type\": \"simple\",\r\n        \"name\": \"leap_up\"\r\n      }\r\n    ],\r\n    \"bonus\": {\r\n      \"name\": \"Sure Kill\",\r\n      \"text\": \"In addition to the normal uses of Fate points (see page 293), when an Assassin successfully hits with an attack, he may spend a Fate point to inflict additional damage equal to his degrees of success on the attack roll on the first hit the attack inflicts.\"\r\n    }\r\n  }\r\n];","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Box from '@material-ui/core/Box';\r\nimport NavButton from '../components/NavButton';\r\n\r\nimport roles from '../static_data/roles';\r\nimport AlternativesBox from '../components/AlternativesBox';\r\n\r\nclass Roles extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleTableClick = this.handleTableClick.bind(this);\r\n  }\r\n\r\n  handleTableClick(role) {\r\n    this.props.setRole(role);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Box>\r\n        <header>\r\n        Select your role\r\n        </header>\r\n        \r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Role</TableCell>\r\n              <TableCell>Aptitudes</TableCell>\r\n              <TableCell>Talent</TableCell>\r\n              <TableCell>Bonus</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {\r\n              roles.map(role => {\r\n                const isRowSelected = (this.props.role !== undefined) && (role.name === this.props.role.name);\r\n                return(\r\n                  <TableRow\r\n                    hover\r\n                    onClick={() => this.handleTableClick(role)}\r\n                    key={role.name}\r\n                    selected={isRowSelected}\r\n                  >\r\n                    <TableCell>\r\n                      {role.name}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {\r\n                        role.aptitudes.map(aptitude => {\r\n                          if (Array.isArray(aptitude)) {\r\n                            return(\r\n                              <AlternativesBox>\r\n                                {\r\n                                  aptitude.map(singleAptitude => (\r\n                                    <Box>\r\n                                      {singleAptitude}\r\n                                    </Box>\r\n                                  ))\r\n                                }\r\n                              </AlternativesBox>\r\n                            )\r\n                          } else {\r\n                            return(\r\n                              <Box>\r\n                                {aptitude}\r\n                              </Box>\r\n                            )\r\n                          }\r\n                        })\r\n                      }\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      Talent\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      Bonus\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              })\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n        <NavButton to={\"/backgrounds\"}>\r\n          Back\r\n        </NavButton>\r\n        <NavButton disabled={this.props.role === undefined} >\r\n          Advances\r\n        </NavButton>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Roles;","import React from 'react';\r\nimport './App.css';\r\nimport CharacterCreator from './views/CharacterCreator';\r\nimport Homeworlds from './views/Homeworlds';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport Characteristics from './views/Characteristics';\r\nimport Backgrounds from './views/Backgrounds';\r\nimport Roles from './views/Roles';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      homeworld: undefined,\r\n      characteristics: {\r\n        \"weapon_skill\": 0,\r\n        \"ballistic_skill\": 0,\r\n        \"strength\": 0,\r\n        \"toughness\": 0,\r\n        \"agility\": 0,\r\n        \"intelligence\": 0,\r\n        \"perception\": 0,\r\n        \"willpower\": 0,\r\n        \"fellowship\": 0,\r\n        \"influence\": 0\r\n      },\r\n      wounds: undefined,\r\n      fate: undefined,\r\n      background: undefined,\r\n      backgroundChoices: undefined,\r\n      role: undefined\r\n    };\r\n\r\n    this.setHomeworld = this.setHomeworld.bind(this);\r\n    this.setCharacteristics = this.setCharacteristics.bind(this);\r\n    this.handleCharacteristicChange = this.handleCharacteristicChange.bind(this);\r\n    this.setWounds = this.setWounds.bind(this);\r\n    this.setFate = this.setFate.bind(this);\r\n    this.setBackground = this.setBackground.bind(this);\r\n    this.setBackgroundChoices = this.setBackgroundChoices.bind(this);\r\n    this.setRole = this.setRole.bind(this);\r\n  }\r\n\r\n  setHomeworld(homeworld) {\r\n    this.setState({\r\n      ...this.state,\r\n      homeworld: homeworld\r\n    });\r\n  }\r\n\r\n  setCharacteristics(characteristics) {\r\n    this.setState({\r\n      ...this.state,\r\n      characteristics: characteristics\r\n    });\r\n  }\r\n\r\n  handleCharacteristicChange(event, characteristic) {\r\n    this.setCharacteristics({\r\n      ...this.state.characteristics, \r\n      [characteristic]: event.target.value\r\n    });\r\n  }\r\n\r\n  setWounds(wounds) {\r\n    this.setState({\r\n      ...this.state,\r\n      wounds: wounds\r\n    });\r\n  }\r\n\r\n  setFate(fate) {\r\n    this.setState({\r\n      ...this.state,\r\n      fate: fate\r\n    });\r\n  }\r\n\r\n  setBackground(background) {\r\n    const skillChoices = background.skills.filter(skill => skill.type === \"choice\" || (skill.type === \"specialized\" && skill.specialization === null)).map(skill => ({...skill, ...(skill.type === \"choice\" && {selected: null})}));\r\n    const talentChoices = background.talents.filter(talent => talent.type === \"choice\").map(talent => ({...talent, selected: null}));\r\n    const equipmentChoices = background.equipment.filter(item => item.type === \"choice\").map(item => ({...item, selected: null}))\r\n    \r\n    const backgroundChoices = {\r\n      skills: skillChoices,\r\n      talents: talentChoices,\r\n      equipment: equipmentChoices,\r\n      aptitude: null\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      background: background,\r\n      backgroundChoices: backgroundChoices\r\n    });\r\n  }\r\n\r\n  setBackgroundChoices(backgroundChoices) {\r\n    this.setState({\r\n      ...this.state,\r\n      backgroundChoices: backgroundChoices\r\n    })\r\n  }\r\n\r\n  setRole(role) {\r\n    this.setState({\r\n      ...this.state,\r\n      role: role\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Route path=\"/\" exact component={CharacterCreator} />\r\n        <Route path=\"/homeworlds/\" render={(props) => <Homeworlds {...props} homeworld={this.state.homeworld} setHomeworld={this.setHomeworld}/>} />\r\n        <Route path=\"/characteristics/\" render={(props) => <Characteristics {...props} homeworld={this.state.homeworld} characteristics={this.state.characteristics} fate={this.state.fate} wounds={this.state.wounds} handleCharacteristicChange={this.handleCharacteristicChange} setFate={this.setFate} setWounds={this.setWounds} />} />\r\n        <Route path=\"/backgrounds/\" render={(props) => <Backgrounds {...props} background={this.state.background} backgroundChoices={this.state.backgroundChoices} setBackground={this.setBackground} setBackgroundChoices={this.setBackgroundChoices} />} />\r\n        <Route path=\"/roles/\" render={(props) => <Roles {...props} role={this.state.role} setRole={this.setRole} />} />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}